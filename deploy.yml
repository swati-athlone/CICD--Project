- name: Deploy Wine Manager Docker Container
  hosts: local
  connection: local
  become: yes

  tasks:
    - name: Check if port 8081 is occupied
      shell: |
        lsof -i :8081 || true
      register: port_check
      ignore_errors: yes

    - name: Kill process using port 8081 if occupied
      shell: |
        pid=$(lsof -ti:8081)
        if [ -n "$pid" ]; then
          kill -9 $pid || true
        fi
      when: port_check.stdout != ""
      ignore_errors: yes

    - name: Stop and remove old running container (if exists)
      shell: |
        docker ps -q --filter "name=wine-app" | xargs -I {} docker stop {} || true
        docker ps -a -q --filter "name=wine-app" | xargs -I {} docker rm {} || true
      ignore_errors: yes

    - name: Remove existing image (if exists)
      shell: |
        docker rmi -f wine-manager:latest || true

    - name: Copy JAR file to target build directory (already done by Jenkins)
      copy:
        src: /Users/swati/.jenkins/workspace/CICD-WineApp/target/wine-manager-1.0.jar
        dest: /Users/swati/deploy/wine-manager/wine-manager.jar
        mode: '0755'

    - name: Copy Dockerfile
      copy:
        src: /Users/swati/Desktop/Msc/Second_Semester/Microservices/wine-app/Dockerfile
        dest: /Users/swati/deploy/Dockerfile

    - name: Build Docker Image
      shell: |
        export PATH=$PATH:/usr/local/bin
        /usr/local/bin/docker build -t wine-manager:latest /Users/swati/deploy
      args:
        chdir: /Users/swati/deploy

    - name: Run Docker Container
      shell: |
        /usr/local/bin/docker run -d -p 8081:8081 --name wine-app wine-manager:latest